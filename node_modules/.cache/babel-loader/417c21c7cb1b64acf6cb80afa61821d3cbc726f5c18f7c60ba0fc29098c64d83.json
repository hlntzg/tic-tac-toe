{"ast":null,"code":"var _jsxFileName = \"/home/hutzig/Documents/web/tic-tac-toe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Toggle } from \"./components/Toggle\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nexport default function Board() {\n  _s();\n  const [isDark, setIsDark] = useState(false);\n\n  //  return <button className=\"square\">X</button>;\n  const [xIsNext, setXIsNext] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const winner = getWinner(squares);\n  let status;\n  if (winner) {\n    status = `Winner: ${winner}`;\n  } else if (squares.every(square => square !== null)) {\n    status = `No winner :(`;\n  } else {\n    status = `Next player: ${xIsNext ? \"X\" : \"O\"}`;\n  }\n  function handleClick(i) {\n    if (!squares[i] && !getWinner(squares)) {\n      const nextSquares = squares.slice();\n      nextSquares[i] = xIsNext ? \"X\" : \"O\";\n      setSquares(nextSquares);\n      setXIsNext(!xIsNext);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => handleClick(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => handleClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => handleClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => handleClick(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => handleClick(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => handleClick(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => handleClick(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => handleClick(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => handleClick(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n/** check all the possible winning combinations \n * (rows, columns, diagonals) and return 'X', 'O', or null if there’s no winner yet.\n */\n_s(Board, \"QnaIFQG4QDLaoGL6tT9L7KaeLWU=\");\n_c2 = Board;\nfunction getWinner(squares) {\n  const lines = [[0, 1, 2],\n  // top row\n  [3, 4, 5],\n  // middle row\n  [6, 7, 8],\n  // bottom row\n  [0, 3, 6],\n  // left column\n  [1, 4, 7],\n  // middle column\n  [2, 5, 8],\n  // right column\n  [0, 4, 8],\n  // main diagonal\n  [2, 4, 6] // anti-diagonal\n  ];\n  for (const [a, b, c] of lines) {\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a]; // either 'X' or 'O'\n    }\n  }\n  return null;\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","Toggle","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","_s","isDark","setIsDark","xIsNext","setXIsNext","squares","setSquares","Array","fill","winner","getWinner","status","every","square","handleClick","i","nextSquares","slice","_c2","lines","a","b","c","$RefreshReg$"],"sources":["/home/hutzig/Documents/web/tic-tac-toe/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { Toggle } from \"./components/Toggle\"\n\nfunction Square({value, onSquareClick}) { \n  return (\n    <button className=\"square\"\n      onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nexport default function Board() {\n\n  const [isDark, setIsDark] = useState(false);\n\n//  return <button className=\"square\">X</button>;\n  const [xIsNext, setXIsNext] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  \n  const winner = getWinner(squares);\n\n  let status;\n  if (winner) {\n    status = `Winner: ${winner}`;\n  } else if (squares.every(square => square !== null)) {\n    status = `No winner :(`;\n  } else {\n    status = `Next player: ${xIsNext ? \"X\" : \"O\"}`;\n  }\n\n  function handleClick(i) {\n    if (!squares[i] && !getWinner(squares)) {\n      const nextSquares = squares.slice();\n      nextSquares[i] = xIsNext ? \"X\" : \"O\";\n      setSquares(nextSquares);\n      setXIsNext(!xIsNext);\n    }\n  }\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      <div className=\"board-row\">\n        <Square value={squares[0]} onSquareClick={() => handleClick(0)} />\n        <Square value={squares[1]} onSquareClick={() => handleClick(1)} />\n        <Square value={squares[2]} onSquareClick={() => handleClick(2)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[3]} onSquareClick={() => handleClick(3)} />\n        <Square value={squares[4]} onSquareClick={() => handleClick(4)} />\n        <Square value={squares[5]} onSquareClick={() => handleClick(5)} />\n      </div>\n      <div className=\"board-row\">\n        <Square value={squares[6]} onSquareClick={() => handleClick(6)} />\n        <Square value={squares[7]} onSquareClick={() => handleClick(7)} />\n        <Square value={squares[8]} onSquareClick={() => handleClick(8)} />\n      </div>\n    </>\n  );\n}\n\n/** check all the possible winning combinations \n * (rows, columns, diagonals) and return 'X', 'O', or null if there’s no winner yet.\n */\nfunction getWinner(squares) {\n  const lines = [\n    [0, 1, 2],  // top row\n    [3, 4, 5],  // middle row\n    [6, 7, 8],  // bottom row\n    [0, 3, 6],  // left column\n    [1, 4, 7],  // middle column\n    [2, 5, 8],  // right column\n    [0, 4, 8],  // main diagonal\n    [2, 4, 6],  // anti-diagonal\n  ];\n\n  for (const [a, b, c] of lines) {\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a]; // either 'X' or 'O'\n    }\n  }\n\n  return null;\n}\n\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,SAASC,MAAMA,CAAC;EAACC,KAAK;EAAEC;AAAa,CAAC,EAAE;EACtC,oBACEL,OAAA;IAAQM,SAAS,EAAC,QAAQ;IACxBC,OAAO,EAAEF,aAAc;IAAAG,QAAA,EACtBJ;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACC,EAAA,GAPQV,MAAM;AASf,eAAe,SAASW,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAE9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACE,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAACyB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAE3D,MAAMC,MAAM,GAAGC,SAAS,CAACL,OAAO,CAAC;EAEjC,IAAIM,MAAM;EACV,IAAIF,MAAM,EAAE;IACVE,MAAM,GAAG,WAAWF,MAAM,EAAE;EAC9B,CAAC,MAAM,IAAIJ,OAAO,CAACO,KAAK,CAACC,MAAM,IAAIA,MAAM,KAAK,IAAI,CAAC,EAAE;IACnDF,MAAM,GAAG,cAAc;EACzB,CAAC,MAAM;IACLA,MAAM,GAAG,gBAAgBR,OAAO,GAAG,GAAG,GAAG,GAAG,EAAE;EAChD;EAEA,SAASW,WAAWA,CAACC,CAAC,EAAE;IACtB,IAAI,CAACV,OAAO,CAACU,CAAC,CAAC,IAAI,CAACL,SAAS,CAACL,OAAO,CAAC,EAAE;MACtC,MAAMW,WAAW,GAAGX,OAAO,CAACY,KAAK,CAAC,CAAC;MACnCD,WAAW,CAACD,CAAC,CAAC,GAAGZ,OAAO,GAAG,GAAG,GAAG,GAAG;MACpCG,UAAU,CAACU,WAAW,CAAC;MACvBZ,UAAU,CAAC,CAACD,OAAO,CAAC;IACtB;EACF;EAEA,oBACElB,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA;MAAKM,SAAS,EAAC,QAAQ;MAAAE,QAAA,EAAEkB;IAAM;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACtCZ,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAE,QAAA,gBACxBR,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEgB,OAAO,CAAC,CAAC,CAAE;QAACf,aAAa,EAAEA,CAAA,KAAMwB,WAAW,CAAC,CAAC;MAAE;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClEZ,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEgB,OAAO,CAAC,CAAC,CAAE;QAACf,aAAa,EAAEA,CAAA,KAAMwB,WAAW,CAAC,CAAC;MAAE;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClEZ,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEgB,OAAO,CAAC,CAAC,CAAE;QAACf,aAAa,EAAEA,CAAA,KAAMwB,WAAW,CAAC,CAAC;MAAE;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,eACNZ,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAE,QAAA,gBACxBR,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEgB,OAAO,CAAC,CAAC,CAAE;QAACf,aAAa,EAAEA,CAAA,KAAMwB,WAAW,CAAC,CAAC;MAAE;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClEZ,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEgB,OAAO,CAAC,CAAC,CAAE;QAACf,aAAa,EAAEA,CAAA,KAAMwB,WAAW,CAAC,CAAC;MAAE;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClEZ,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEgB,OAAO,CAAC,CAAC,CAAE;QAACf,aAAa,EAAEA,CAAA,KAAMwB,WAAW,CAAC,CAAC;MAAE;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,eACNZ,OAAA;MAAKM,SAAS,EAAC,WAAW;MAAAE,QAAA,gBACxBR,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEgB,OAAO,CAAC,CAAC,CAAE;QAACf,aAAa,EAAEA,CAAA,KAAMwB,WAAW,CAAC,CAAC;MAAE;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClEZ,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEgB,OAAO,CAAC,CAAC,CAAE;QAACf,aAAa,EAAEA,CAAA,KAAMwB,WAAW,CAAC,CAAC;MAAE;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClEZ,OAAA,CAACG,MAAM;QAACC,KAAK,EAAEgB,OAAO,CAAC,CAAC,CAAE;QAACf,aAAa,EAAEA,CAAA,KAAMwB,WAAW,CAAC,CAAC;MAAE;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAAA,eACN,CAAC;AAEP;;AAEA;AACA;AACA;AAFAG,EAAA,CAlDwBD,KAAK;AAAAmB,GAAA,GAALnB,KAAK;AAqD7B,SAASW,SAASA,CAACL,OAAO,EAAE;EAC1B,MAAMc,KAAK,GAAG,CACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAAG;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAAG;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAAG;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAAG;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAAG;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAAG;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAAG;EACZ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAG;EAAA,CACb;EAED,KAAK,MAAM,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,IAAIH,KAAK,EAAE;IAC7B,IAAId,OAAO,CAACe,CAAC,CAAC,IAAIf,OAAO,CAACe,CAAC,CAAC,KAAKf,OAAO,CAACgB,CAAC,CAAC,IAAIhB,OAAO,CAACe,CAAC,CAAC,KAAKf,OAAO,CAACiB,CAAC,CAAC,EAAE;MACxE,OAAOjB,OAAO,CAACe,CAAC,CAAC,CAAC,CAAC;IACrB;EACF;EAEA,OAAO,IAAI;AACb;AAAC,IAAAtB,EAAA,EAAAoB,GAAA;AAAAK,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAL,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}